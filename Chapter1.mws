{VERSION 2 3 "Windows 10" "2.3" }
{USTYLETAB {PSTYLE "Heading 1" -1 3 1 {CSTYLE "" -1 -1 "Times" 1 18 0
 0 0 1 2 1 1 2 2 2 1 0 0 1 }3 1 0 0 6 6 2 0 2 0 2 2 -1 1 }{PSTYLE "War
ning" -1 7 1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 1 0
 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Left Justified Maple Outp
ut" -1 12 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 
}1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Fixed Width" -1 17 1 {CSTYLE "
" -1 -1 "Courier" 1 10 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }3 1 0 0 0 0 2 0 2 
0 2 2 -1 1 }{PSTYLE "Help" -1 10 1 {CSTYLE "" -1 -1 "Courier" 1 9 0 0 
255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Head
ing 4" -1 20 1 {CSTYLE "" -1 -1 "Times" 1 10 0 0 0 1 1 1 2 2 2 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Line Printed Output" -1 6 1
 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 
0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Heading 2" -1 4 1 {CSTYLE "" -1 -1 "T
imes" 1 14 0 0 0 1 2 1 2 2 2 2 1 0 0 1 }1 1 0 0 4 4 2 0 2 0 2 2 -1 1 }
{PSTYLE "Maple Output" -1 11 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2
 2 2 2 2 2 1 0 0 1 }3 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Heading 3" 
-1 5 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 1 1 2 2 2 2 1 0 0 1 }1 1 
0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Diagnostic" -1 9 1 {CSTYLE "" -1 -1
 "Courier" 1 10 64 128 64 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2
 2 -1 1 }{PSTYLE "Ordered List 1" -1 200 1 {CSTYLE "" -1 -1 "Times" 1 
12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 2 2 -1 1 }{PSTYLE 
"Text Output" -1 2 1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 2 2 2 2
 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Ordered List 2" 
-1 201 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 
1 0 0 3 3 2 36 2 0 2 2 -1 1 }{PSTYLE "Ordered List 3" -1 202 1 {CSTYLE
 "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 72 2
 0 2 2 -1 1 }{PSTYLE "Ordered List 4" -1 203 1 {CSTYLE "" -1 -1 "Times
" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 108 2 0 2 2 -1 1 }
{PSTYLE "Ordered List 5" -1 204 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 
1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 144 2 0 2 2 -1 1 }{PSTYLE "Annota
tion Title" -1 205 1 {CSTYLE "" -1 -1 "Times" 1 18 0 0 0 1 2 1 2 2 2 2
 1 0 0 1 }3 1 0 0 12 12 2 0 2 0 2 2 -1 1 }{PSTYLE "HyperlinkError" -1 
206 1 {CSTYLE "" -1 -1 "Courier New" 1 12 255 0 255 1 2 2 1 2 2 1 1 0 
0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "HyperlinkWarning" -1 207 1
 {CSTYLE "" -1 -1 "Courier New" 1 12 0 0 255 1 2 2 1 2 2 1 1 0 0 1 }1 
1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Bullet Item" -1 15 1 {CSTYLE "" 
-1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 2 
2 -1 1 }{PSTYLE "Maple Plot" -1 13 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0
 0 1 2 2 2 2 2 2 1 0 0 1 }3 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "List \+
Item" -1 14 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 
1 }1 1 0 0 3 3 2 0 2 0 2 2 -1 1 }{PSTYLE "Dash Item" -1 16 1 {CSTYLE "
" -1 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 3 3 2 0 2 0 
2 2 -1 1 }{PSTYLE "Error" -1 8 1 {CSTYLE "" -1 -1 "Courier" 1 10 255 0
 255 1 2 2 2 2 2 1 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "Tit
le" -1 18 1 {CSTYLE "" -1 -1 "Times" 1 18 0 0 0 1 2 1 1 2 2 2 1 0 0 1 
}3 1 0 0 12 12 2 0 2 0 2 2 -1 1 }{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1
 -1 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{PSTYLE "Author" -1 19 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 0 1 2
 2 2 2 2 2 1 0 0 1 }3 1 0 0 8 8 2 0 2 0 2 2 -1 1 }{CSTYLE "Help Variab
le" -1 25 "Courier" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Maple C
omment" -1 21 "Courier" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Def
ine" -1 200 "Times" 1 12 0 0 0 1 1 1 2 2 2 2 0 0 0 1 }{CSTYLE "Popup" 
-1 31 "Times" 1 12 0 128 128 1 1 2 1 2 2 2 0 0 0 1 }{CSTYLE "Atomic Va
riable" -1 201 "Times" 1 12 175 0 175 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "
Plot Text" -1 28 "Times" 1 8 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Emp
hasis" -1 202 "Times" 1 12 128 0 128 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "C
ode" -1 203 "Courier New" 1 12 255 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE 
"2D Math Italic" -1 3 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "2D Math Small" -1 7 "Times" 1 1 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }
{CSTYLE "2D Math Bold Small" -1 10 "Times" 1 1 0 0 0 1 2 1 2 2 2 2 0 0
 0 1 }{CSTYLE "Help Bold" -1 39 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0
 1 }{CSTYLE "Help Menus" -1 36 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 
1 }{CSTYLE "Help Normal" -1 30 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 
1 }{CSTYLE "Maple Input" -1 0 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 0 0
 0 1 }{CSTYLE "Header and Footer" -1 204 "Times" 1 10 0 0 0 1 2 2 2 2 
2 2 0 0 0 1 }{CSTYLE "Output Labels" -1 29 "Times" 1 8 0 0 0 1 2 2 2 2
 2 2 0 0 0 1 }{CSTYLE "Help Notes" -1 37 "Times" 1 12 0 0 0 1 2 1 2 2 
2 2 0 0 0 1 }{CSTYLE "Help Underlined" -1 44 "Times" 1 12 0 0 0 1 2 2 
1 2 2 2 0 0 0 1 }{CSTYLE "Text" -1 205 "Times" 1 12 0 0 0 1 2 2 2 2 2 
2 0 0 0 1 }{CSTYLE "Plot Title" -1 27 "Times" 1 10 0 0 0 1 2 1 2 2 2 2
 0 0 0 1 }{CSTYLE "Default" -1 38 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0
 0 1 }{CSTYLE "Help Italic Bold" -1 40 "Times" 1 12 0 0 0 1 1 2 2 2 2 
2 0 0 0 1 }{CSTYLE "Maple Input Placeholder" -1 206 "Courier New" 1 12
 200 0 200 1 2 1 2 2 1 2 0 0 0 1 }{CSTYLE "LaTeX" -1 32 "Times" 1 12 0
 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Emphasized" -1 22 "Times" 1 
12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Equation Label" -1 207 "Times
" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Help Italic" -1 42 "Times
" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "Prompt" -1 1 "Courier" 1 
12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math Bold" -1 5 "Times" 1 
12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Hyperlink" -1 17 "Times" 1 12
 0 128 128 1 2 2 1 2 2 2 0 0 0 1 }{CSTYLE "Caption Text" -1 208 "Times
" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Maple Input258" -1 209 "C
ourier" 1 12 255 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Help Underlined B
old" -1 41 "Times" 1 12 0 0 0 1 1 1 2 2 2 2 0 0 0 1 }{CSTYLE "Copyrigh
t" -1 34 "Times" 1 10 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Dictionary
 Hyperlink" -1 45 "Times" 1 12 147 0 15 1 2 2 1 2 2 2 0 0 0 1 }{CSTYLE
 "2D Input" -1 19 "Times" 1 12 255 0 0 1 2 2 2 2 1 2 0 0 0 1 }{CSTYLE 
"Help Heading" -1 26 "Times" 1 14 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE
 "2D Output" -1 20 "Times" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE
 "2D Inert Output" -1 210 "Times" 1 12 144 144 144 1 2 2 2 2 1 2 0 0 0
 1 }{CSTYLE "Page Number" -1 33 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0
 1 }{CSTYLE "Help Fixed" -1 23 "Courier" 1 10 0 0 0 1 2 2 2 2 2 2 0 0 
0 1 }{CSTYLE "2D Math Italic Small" -1 211 "Times" 1 1 0 0 0 1 1 2 2 2
 2 2 0 0 0 1 }{CSTYLE "2D Math Symbol 2" -1 16 "Times" 1 12 0 0 0 1 2 
2 2 2 2 2 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 1 12 0 0 0 1 2 2 2 2
 2 2 0 0 0 1 }{CSTYLE "Help Nonterminal" -1 24 "Courier" 1 12 0 0 0 1 
2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Annotation Text" -1 212 "Times" 1 12 0 0
 0 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "Help Maple Name" -1 35 "Times" 1 12
 104 64 92 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "Help Underlined Italic" -1 
43 "Times" 1 12 0 0 0 1 1 2 1 2 2 2 0 0 0 1 }{CSTYLE "Caption Referenc
e" -1 213 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "2D Commen
t" -1 18 "Times" 1 12 0 0 0 1 2 2 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 208 1
 {CSTYLE "" -1 -1 "Times" 1 24 0 0 0 1 2 1 2 2 2 2 1 0 0 1 }3 1 0 0 12
 12 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 209 1 {CSTYLE "" -1 -1 "Courier" 1
 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 210 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 214 "Times" 1
 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 215 "Times" 1 12 0 0 0 
1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 216 "Times" 1 12 0 0 0 1 1 2 2 2 
2 2 0 0 0 1 }{CSTYLE "" -1 217 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 
1 }{CSTYLE "" -1 218 "Times" 1 12 0 0 255 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 219 "Times" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE 
"" -1 220 "Times" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 
221 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 222 "Times
" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 223 "Times" 1 12 0 0
 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 224 "Times" 1 12 0 0 0 1 2 1 2
 2 2 2 0 0 0 1 }{CSTYLE "" -1 225 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0
 0 1 }{CSTYLE "" -1 226 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 227 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE ""
 -1 228 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 229 "T
imes" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 230 "Times" 1 12
 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 231 "Times" 1 12 0 0 0 1 1
 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 232 "Times" 1 12 0 0 0 1 1 2 2 2 2 2
 0 0 0 1 }{CSTYLE "" -1 233 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 234 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE ""
 -1 235 "Times" 1 12 255 0 255 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 
236 "Times" 1 12 255 0 255 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 237 "T
imes" 1 12 255 0 255 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 238 "Times" 
1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 239 "Times" 1 12 0 0 0
 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 240 "Times" 1 12 0 0 0 1 2 1 2 2
 2 2 0 0 0 1 }{CSTYLE "" -1 241 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0
 1 }{PSTYLE "" -1 211 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 
2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 212 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 213 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{CSTYLE "" -1 242 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{PSTYLE ""
 -1 214 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 
1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 215 1 {CSTYLE "" -1 -1 
"Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{PSTYLE "" -1 216 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 
1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 217 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 243 "Times" 1 12 0 0 0 1 2 1 2 2 
2 2 0 0 0 1 }{CSTYLE "" -1 244 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 
1 }{CSTYLE "" -1 245 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{PSTYLE
 "" -1 218 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0
 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 219 1 {CSTYLE "" -1 
-1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2
 2 -1 1 }{PSTYLE "" -1 220 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1
 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 221 
1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0
 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 222 1 {CSTYLE "" -1 -1 "Courier
" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 223 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 224 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 225 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "
" -1 246 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 226 1
 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 
0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 247 "Times" 1 12 0 0 0 1 1 2 2 2
 2 2 0 0 0 1 }{CSTYLE "" -1 248 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0
 1 }{PSTYLE "" -1 227 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 
2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 228 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 229 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 230 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 231 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 232 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "
" -1 233 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 249 "Times" 1 12 255 0
 255 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 234 1 {CSTYLE "" -1 -1 "Cour
ier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 
}{PSTYLE "" -1 235 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2
 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 250 "Times" 
1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 236 1 {CSTYLE "" -1 -1
 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2
 -1 1 }{CSTYLE "" -1 251 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{PSTYLE "" -1 237 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 238 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 239 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "
" -1 240 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 241 1 {CSTYLE "" -1 -1
 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2
 -1 1 }{CSTYLE "" -1 252 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 253 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE ""
 -1 254 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 242 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 243 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 244 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 245 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 246 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "
" -1 247 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 248 1 {CSTYLE "" -1 -1
 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2
 -1 1 }{CSTYLE "" -1 255 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{PSTYLE "" -1 249 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 256 "Times" 1
 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 250 1 {CSTYLE "" -1 -1 
"Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{CSTYLE "" -1 257 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 258 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE ""
 -1 251 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 
1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 259 "Times" 1 12 0 0 0 
1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 252 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 253 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 254 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 255 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "
" -1 256 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 257 1 {CSTYLE "" -1 -1
 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2
 -1 1 }{PSTYLE "" -1 258 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2
 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 259 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 260 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{CSTYLE "" -1 260 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE ""
 -1 261 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 262 "T
imes" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 261 1 {CSTYLE ""
 -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2
 0 2 2 -1 1 }{PSTYLE "" -1 262 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0
 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 
263 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 264 "Times
" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 265 "Times" 1 12 0 0
 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 266 "Times" 1 12 0 0 0 1 1 2 2
 2 2 2 0 0 0 1 }{CSTYLE "" -1 267 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0
 0 1 }{CSTYLE "" -1 268 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{PSTYLE "" -1 263 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 269 "Times" 1
 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 264 1 {CSTYLE "" -1 -1 
"Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{CSTYLE "" -1 270 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 271 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE ""
 -1 265 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 
1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 266 1 {CSTYLE "" -1 -1 
"Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{PSTYLE "" -1 267 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 
1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 268 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 269 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{CSTYLE "" -1 272 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE ""
 -1 270 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 
1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 273 "Times" 1 12 0 0 0 
1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 271 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 272 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 273 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{CSTYLE "" -1 274 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0
 0 1 }{CSTYLE "" -1 275 "Times" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }
{CSTYLE "" -1 276 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE ""
 -1 274 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 
1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 275 1 {CSTYLE "" -1 -1 
"Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 
-1 1 }{PSTYLE "" -1 276 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 
1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 277 "Ti
mes" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 278 "Times" 1 
12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 277 1 {CSTYLE "" -1 -1
 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2
 -1 1 }{PSTYLE "" -1 278 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2
 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 279 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 280 1 {CSTYLE "" -1 -1 "Courier" 
1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 281 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 279 "Times" 1
 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 280 "Times" 1 12 0 0 
255 1 2 2 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 282 1 {CSTYLE "" -1 -1 "Couri
er" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }
{PSTYLE "" -1 283 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 
1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "" -1 284 1 {CSTYLE
 "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 
0 2 0 2 2 -1 1 }{PSTYLE "" -1 285 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "
" -1 281 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 282 "
Times" 1 12 255 0 255 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 286 1 
{CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0
 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 283 "Times" 1 12 0 0 0 1 2 1 2 2 
2 2 0 0 0 1 }{PSTYLE "" -1 287 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0
 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 
284 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 285 "Times
" 1 12 0 0 255 1 2 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 286 "Times" 1 12 0
 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 287 "Times" 1 12 0 0 0 1 2 1
 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 288 1 {CSTYLE "" -1 -1 "Courier" 1 12 
255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{PSTYLE "
" -1 289 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0
 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 288 "Times" 1 12 0 0 0
 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 289 "Times" 1 12 0 0 0 1 2 1 2 2
 2 2 0 0 0 1 }{PSTYLE "" -1 290 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 
0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1
 290 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 291 "Time
s" 1 12 0 0 0 1 1 2 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 292 "Times" 1 12 0 
0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 293 "Times" 1 12 255 0 255 1 
2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 294 "Times" 1 12 0 0 0 1 2 1 2 2 2 
2 0 0 0 1 }{PSTYLE "" -1 291 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0
 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }{CSTYLE "" -1 
295 "Times" 1 12 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 296 "Times
" 1 12 255 0 255 1 2 1 2 2 2 2 0 0 0 1 }{CSTYLE "" -1 297 "Times" 1 12
 0 0 0 1 2 1 2 2 2 2 0 0 0 1 }{PSTYLE "" -1 292 1 {CSTYLE "" -1 -1 "Co
urier" 1 12 255 0 0 1 2 1 2 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 
1 }{PSTYLE "" -1 293 1 {CSTYLE "" -1 -1 "Courier" 1 12 255 0 0 1 2 1 2
 2 1 2 1 0 0 1 }1 1 0 0 0 0 2 0 2 0 2 2 -1 1 }}
{SECT 0 {PARA 208 "" 0 "" {TEXT 205 10 "Chapter 1\n" }{TEXT 205 12 "I
ntroduction" }}{EXCHG {PARA 209 "> " 0 "" {MPLTEXT 1 205 8 "restart;" 
}}}{EXCHG {PARA 210 "> " 0 "" {MPLTEXT 1 205 39 "interface(labelling=f
alse,warnlevel=0);" }}}{SECT 0 {PARA 4 "" 0 "" {TEXT 298 23 "1.1 Preli
minary Remarks" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 727 "Many vibration
 problems in engineering are nonlinear in nature. The usual linear ana
lysis may be inadequate for many applications. An essential difference
 in the study of nonlinear systems is that general solutions cannot be
 obtained by superposition, as in the case of linear systems. Moreover
, the nonlinearity brings many new phenomena, which do not occur in li
near systems. To study nonlinear systems, one has to learn new mathema
tical techniques, which have been developed in many branches of applie
d mathematics, physics, and engineering. In the past several years, a \+
number of powerful computer software packages have been developed that
 allow one to perform complicated symbolic manipulations. One of the b
est known is " }{TEXT 214 5 "Maple" }{TEXT 299 62 "; it is created by \+
Waterloo Maple, Inc.. In this book, we use " }{TEXT 215 5 "Maple" }
{TEXT 299 215 "'s symbolic programming techniques to implement various
 perturbation methods for studying the dynamics of weakly nonlinear sy
stems. Instead of being burdened by the tedious algebra required to ob
tain the solutions, " }{TEXT 216 5 "Maple" }{TEXT 299 128 " enables us
 to focus our attention on understanding the techniques and the physic
s, thereby free our time for creative thinking." }}}{PARA 0 "" 0 "" 
{TEXT 299 0 "" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 134 "Symbolic manipu
lators are powerful tools. They can be used to perform analyses in eit
her an interactive or an automatic way. Learning " }{TEXT 217 5 "Maple
" }{TEXT 299 80 " in the process of studying perturbation methods shou
ld enhance the concepts of " }{TEXT 218 5 "Maple" }{TEXT 219 23 " prog
ramming techniques" }{TEXT 299 20 " as well as various " }{TEXT 220 
23 "perturbation techniques" }{TEXT 299 1 "." }}}{PARA 0 "" 0 "" {TEXT
 299 0 "" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 654 "In Chapter 2, we des
cribe how various perturbation methods, such as the Lindstedt-Poincar
\351 technique, the method of multiple scales, and the method of avera
ging, can be used to obtain uniform asymptotic expansions of the solut
ions of the undamped and unforced Duffing equation. In Chapter 3, we a
pply the Lindstedt-Poincar\351 technique, the method of multiple scale
s, the method of averaging, the generalized method of averaging, the K
rylov-Bogoliubov-Mitropolsky technique, and the method of normal forms
 to obtain uniform expansions of the solutions of an undamped and unfo
rced single-degree-of-freedom oscillator with quadratic and cubic nonl
inearities." }}}{PARA 0 "" 0 "" {TEXT 299 0 "" }}{EXCHG {PARA 0 "" 0 "
" {TEXT 299 657 "In Chapter 4, we use the method of multiple scales, t
he generalized method of averaging, and the method of normal forms to \+
obtain uniform expansions of the solutions of a forced single-degree-o
f-freedom oscillator with quadratic and cubic nonlinearities. In Chapt
er 5, we apply the method of multiple scales, the method of normal for
ms, and the generalized method of averaging to study higher-order appr
oximations for systems with internal resonances. In Chapter 6, we appl
y the method of multiple scales to obtain uniform expansions of the so
lutions of externally and parametrically excited linearly coupled or u
ncoupled multiple-degree-of-freedom systems." }}}{PARA 0 "" 0 "" {TEXT
 299 0 "" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 609 "In Chapter 7, we foc
us our attention on continuous systems with cubic nonlinearities. In S
ection 7.1, we discuss the concepts of adjoint and solvability conditi
ons. Then, we use the method of multiple scales to construct uniformly
 valid asymptotic expansions of the solutions of hinged-clamped beams \+
in Section 7.2 and cantilever beams in Section 7.3. In Chapter 8, we u
se the method of multiple scales to directly attack three continuous s
ystems with quadratic and cubic nonlinearities. We treat buckled beams
 in Section 8.1, circular cylindrical shells in Section 8.2, and near-
square plates in Section 8.3." }}}{PARA 0 "" 0 "" {TEXT 299 0 "" }}
{EXCHG {PARA 0 "" 0 "" {TEXT 299 314 "In Chapter 9, we show how one ca
n use the method of multiple scales to construct higher-order approxim
ations of the solutions of continuous systems having two-to-one intern
al resonances. We discuss two-mode interactions in buckled beams in Se
ction 9.1 and four-mode interactions in suspended cables in Section 9.
2." }}}}{SECT 0 {PARA 4 "" 0 "" {TEXT 298 24 "1.2 Symbolic Computation
" }}{EXCHG {PARA 0 "" 0 "" {TEXT 221 5 "Maple" }{TEXT 299 54 " is a co
mputer environment for doing mathematics. The " }{TEXT 222 5 "Maple" }
{TEXT 299 171 " programming language allows not only for interactive m
anipulations of a wide range of objects, but it also encourages the au
tomation of complicated computations. Because " }{TEXT 223 5 "Maple" }
{TEXT 299 127 " is interactive, it is easy to test and debug programs.
 Therefore, writing a program (or procedure) may only involve putting \+
a " }{TEXT 224 4 "proc" }{TEXT 299 10 "() and an " }{TEXT 225 3 "end" 
}{TEXT 299 423 " around a sequence of commands that we would have used
 to carry out the computation interactively. This computer algebra sys
tem is ideal for formulating, solving, and exploring mathematical mode
ls. Its interactive structured documents which contain live mathematic
s allow one to change equations and update the solutions automatically
. Moreover, the on-line help system is a convenient reference manual a
t your fingertips. " }{TEXT 226 7 "Maple V" }{TEXT 299 181 " has hundr
eds of commands for working with symbolic expressions. In this section
, we briefly cover the ingredients mostly used in the following chapte
rs. For further information on " }{TEXT 227 5 "Maple" }{TEXT 299 20 ",
 please review the " }{TEXT 228 5 "Maple" }{TEXT 299 17 " documentatio
ns: " }{TEXT 229 22 "Maple V Learning Guide" }{TEXT 299 5 " and " }
{TEXT 230 17 "Programming Guide" }{TEXT 299 75 ", Waterloo Maple Inc.,
 Springer-Verlag, 1996. This book was prepared using " }{TEXT 231 7 "M
aple V" }{TEXT 299 1 " " }{TEXT 232 9 "Release 4" }{TEXT 299 8 ". Chec
k " }{TEXT 233 8 "?updates" }{TEXT 299 39 " if you are using a version
 later than " }{TEXT 234 9 "Release 4" }{TEXT 299 1 "." }}}{PARA 0 "" 
0 "" {TEXT 299 0 "" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 21 "In this boo
k, we use " }{TEXT 235 12 "bold-magenta" }{TEXT 299 13 " to indicate "
 }{TEXT 236 22 "user-defined functions" }{TEXT 299 4 " or " }{TEXT 
237 5 "names" }{TEXT 299 5 " and " }{TEXT 238 10 "bold-black" }{TEXT 
299 13 " to indicate " }{TEXT 239 5 "Maple" }{TEXT 299 3 "'s " }{TEXT 
240 18 "built-in functions" }{TEXT 299 1 "." }}}{PARA 0 "" 0 "" {TEXT 
299 0 "" }}{SECT 0 {PARA 5 "" 0 "" {TEXT 300 36 "1.2.1 Assigning Names
 to Expressions" }}{EXCHG {PARA 0 "" 0 "" {TEXT 241 5 "Maple" }{TEXT 
299 16 " use the syntax " }{TEXT 299 20 " for assignment and " }{TEXT 
299 14 " for equation." }}}{EXCHG {PARA 211 "> " 0 "" {MPLTEXT 1 205 
27 "eqs:=\{a*x+b*y=c,d*x+e*y=f\};" }}}{EXCHG {PARA 212 "> " 0 "" 
{MPLTEXT 1 205 12 "vars:=\{x,y\}:" }}}{EXCHG {PARA 213 "> " 0 "" 
{MPLTEXT 1 205 21 "sol:=solve(eqs,vars);" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT 242 5 "Maple" }{TEXT 299 100 " names can contain any alphanumeri
c characters and underscores, but they cannot start with a number." }}
}{EXCHG {PARA 0 "" 0 "" {TEXT 299 55 "One way of defining our own func
tions is the following:" }}}{EXCHG {PARA 214 "> " 0 "" {MPLTEXT 1 205 
14 "f:=x->x^2+3*x;" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 38 "Then, we c
an either plot the function " }{TEXT 299 50 ", apply any operator to i
t, or evaluate it at any " }{TEXT 299 1 "." }}}{EXCHG {PARA 215 "> " 0
 "" {MPLTEXT 1 205 21 "plot(f(x),x=-10..10);" }}}{EXCHG {PARA 216 "> "
 0 "" {MPLTEXT 1 205 27 "seq(diff(f(x),x$i),i=1..3);" }}}{EXCHG {PARA 
217 "> " 0 "" {MPLTEXT 1 205 20 "[f(hi),f(a+b),f(3)];" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT 299 101 "We can use forward quotes to unassign a
 variable that was previously assigned to a value by the form " }{TEXT
 299 23 ". See also the command " }{TEXT 243 8 "unassign" }{TEXT 299 
1 "." }}}}{SECT 0 {PARA 5 "" 0 "" {TEXT 300 17 "1.2.2 Expressions" }}
{EXCHG {PARA 0 "" 0 "" {TEXT 299 4 "All " }{TEXT 244 5 "Maple" }{TEXT 
299 117 " objects are, at one level or another, made up entirely of ex
pressions. Following are some commonly used in the book." }}}{SECT 0 
{PARA 20 "" 0 "" {TEXT 301 9 "Sequences" }}{EXCHG {PARA 0 "" 0 "" 
{TEXT 299 26 "This is simply a group of " }{TEXT 245 5 "Maple" }{TEXT 
299 33 " expressions separated by commas." }}}{EXCHG {PARA 218 "> " 0 
"" {MPLTEXT 1 205 27 "timeScales:=T[0],T[1],T[2];" }}}{EXCHG {PARA 219
 "> " 0 "" {MPLTEXT 1 205 10 "x$3,$3..6;" }}}{EXCHG {PARA 220 "> " 0 "
" {MPLTEXT 1 205 59 "seq(epsilon^i*u[i],i=1..3);   # use seq to build \+
sequences." }}}{EXCHG {PARA 221 "> " 0 "" {MPLTEXT 1 205 25 "seq('f'(i
),i=timeScales);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 44 "We can also \+
use a loop to create a sequence." }}}{EXCHG {PARA 222 "> " 0 "" 
{MPLTEXT 1 205 40 "a:=NULL;   # NULL is the empty sequence." }}}
{EXCHG {PARA 223 "> " 0 "" {MPLTEXT 1 205 20 "for k from 1 to 3 do" }}
{PARA 224 "> " 0 "" {MPLTEXT 1 205 22 "   a:=a,epsilon^k*u[k]" }}
{PARA 225 "> " 0 "" {MPLTEXT 1 205 3 "od;" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT 299 106 "Expression sequences are neither lists nor sets. They p
reserve the order and repetition of their elements." }}}}{SECT 0 
{PARA 20 "" 0 "" {TEXT 301 4 "Sets" }}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 100 "A set is an expression sequence enclosed in braces. Unlike a \+
sequence, its order and repetition are " }{TEXT 246 3 "not" }{TEXT 
299 58 " preserved. Hence, the following three sets are identical." }}
}{EXCHG {PARA 226 "> " 0 "" {MPLTEXT 1 205 26 "\{x,y,z\},\{z,x,y\},\{y
,x,x,z\};" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 92 "As we can see here,
 the order in which we list the elements of a set is not necessarily h
ow " }{TEXT 247 5 "Maple" }{TEXT 299 129 " sees them internally. The o
rdering in which the elements are displayed depends on the order in wh
ich the elements are stored in " }{TEXT 248 5 "Maple" }{TEXT 299 183 "
's internal memory. The order of the elements in a set is session depe
ndent and may change for different runs. Hence, we should avoid using \+
sets to perform order-related computations." }}}{EXCHG {PARA 0 "" 0 ""
 {TEXT 299 55 "Four basic operators of sets in mathematics apply here:
" }}}{EXCHG {PARA 227 "> " 0 "" {MPLTEXT 1 205 28 "set1:=\{x,y,z\} uni
on \{u,z,w\};" }}}{EXCHG {PARA 228 "> " 0 "" {MPLTEXT 1 205 23 "set1 i
ntersect \{u,v,w\};" }}}{EXCHG {PARA 229 "> " 0 "" {MPLTEXT 1 205 19 "
set1 minus \{u,v,w\};" }}}{EXCHG {PARA 230 "> " 0 "" {MPLTEXT 1 205 
15 "member(u,set1);" }}}}{SECT 0 {PARA 20 "" 0 "" {TEXT 301 5 "Lists" 
}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 123 "A list is an expression sequen
ce enclosed in square brackets. Like a sequence, its order and repetit
ion are also preserved." }}}{EXCHG {PARA 231 "> " 0 "" {MPLTEXT 1 205 
7 "a:='a':" }}}{EXCHG {PARA 232 "> " 0 "" {MPLTEXT 1 205 18 "[a,b,c],[
b,a,c,a];" }}}{EXCHG {PARA 233 "> " 0 "" {MPLTEXT 1 205 45 "list1:=[\{
b1,a1,c1\},\{b2,b2,c2,a2,a2\},\{d,f,e\}];" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT 249 5 "list1" }{TEXT 299 250 " is a list of three sets of elemen
ts. While the ordering of the elements within the sets may change, the
 ordering of the three sets themselves remains the same. The fact that
 order is preserved allows us to extract an element of interest from a
 list." }}}{EXCHG {PARA 234 "> " 0 "" {MPLTEXT 1 205 9 "list1[3];" }}}
{EXCHG {PARA 235 "> " 0 "" {MPLTEXT 1 205 12 "op(3,list1);" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT 299 71 "The total number of elements within a li
st can be determined using the " }{TEXT 250 4 "nops" }{TEXT 299 9 " co
mmand." }}}{EXCHG {PARA 236 "> " 0 "" {MPLTEXT 1 205 12 "nops(list1);"
 }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 57 "The major difference between \+
sequences and lists is that " }{TEXT 251 5 "Maple" }{TEXT 299 57 " fla
ttens a sequence of sequences into a single sequence." }}}{EXCHG 
{PARA 237 "> " 0 "" {MPLTEXT 1 205 30 "A:=seq(b[i],i=1..3): B:=p,q,r:"
 }}}{EXCHG {PARA 238 "> " 0 "" {MPLTEXT 1 205 6 "A,B,A;" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT 299 54 "However, a list of lists remains just a \+
list of lists." }}}{EXCHG {PARA 239 "> " 0 "" {MPLTEXT 1 205 12 "[[A],
[B,A]];" }}}}{SECT 0 {PARA 20 "" 0 "" {TEXT 301 6 "Arrays" }}{EXCHG 
{PARA 0 "" 0 "" {TEXT 299 335 "Arrays are an extension of the concept \+
of the list data structure. A list is group of items with a positive i
nteger as each item's index, which represents its position in the list
. Whereas each element of an array is still associated with an index, \+
but can be more than one dimension. In addition, indices may also be z
ero or negative." }}}{EXCHG {PARA 240 "> " 0 "" {MPLTEXT 1 205 28 "pri
mes:=array(0..2,[2,3,5]);" }}}{EXCHG {PARA 241 "> " 0 "" {MPLTEXT 1 
205 20 "primes[0],primes[2];" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 58 "
To see the array's contents, we must use commands such as " }{TEXT 
252 4 "eval" }{TEXT 299 2 ", " }{TEXT 253 2 "op" }{TEXT 299 5 ", or " 
}{TEXT 254 5 "print" }{TEXT 299 1 "." }}}{EXCHG {PARA 242 "> " 0 "" 
{MPLTEXT 1 205 7 "primes;" }}}{EXCHG {PARA 243 "> " 0 "" {MPLTEXT 1 
205 13 "eval(primes);" }}}{EXCHG {PARA 244 "> " 0 "" {MPLTEXT 1 205 
52 "\"[1];   # eval makes the visible results accessible." }}}{EXCHG 
{PARA 245 "> " 0 "" {MPLTEXT 1 205 51 "print(primes);   # print just p
rints to the screen." }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 72 "Multiple
-dimension arrays are always rectangular in nature. For example," }}}
{EXCHG {PARA 246 "> " 0 "" {MPLTEXT 1 205 40 "matrixA:=array(1..2,1..2
,[[a,b],[c,d]]);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 58 "Standard mat
rix operations and calculations are supported." }}}{EXCHG {PARA 247 ">
 " 0 "" {MPLTEXT 1 205 13 "with(linalg):" }}}{EXCHG {PARA 248 "> " 0 "
" {MPLTEXT 1 205 13 "det(matrixA);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 11 "In general," }{TEXT 255 6 " Maple" }{TEXT 299 108 " does not a
utomatically expand the names of an array to the representation of all
 the elements. For example," }}}{EXCHG {PARA 249 "> " 0 "" {MPLTEXT 1 
205 24 "subs(b=show_me,matrixA);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 
28 "In this case, we must force " }{TEXT 256 5 "Maple" }{TEXT 299 87 "
 to fully evaluate the name of the array to the element level and not \+
just to its name." }}}{EXCHG {PARA 250 "> " 0 "" {MPLTEXT 1 205 31 "su
bs(b=show_me,evalm(matrixA));" }}}}}{SECT 0 {PARA 5 "" 0 "" {TEXT 300 
29 "1.2.3 Expression Manipulation" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 
100 "Most of the time we want to convert the output expressions into a
 form we want or a form with which " }{TEXT 257 5 "Maple" }{TEXT 299 
94 " routines can work. In this section we introduce the most commonly
 used commands in this book." }}}{SECT 0 {PARA 20 "" 0 "" {TEXT 301 
18 "expand and combine" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 73 "These t
wo commands are commonly used in the perturbation techniques. The " }
{TEXT 258 6 "expand" }{TEXT 299 85 " command knows expansion rules for
 many standard mathematical functions. For example," }}}{EXCHG {PARA 
251 "> " 0 "" {MPLTEXT 1 205 21 "expand(sin(3*theta));" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT 299 4 "The " }{TEXT 259 7 "combine" }{TEXT 299 
136 " command, a useful general-purpose routine for putting things tog
ether, knows the same rules but applies them in the opposite direction
." }}}{EXCHG {PARA 252 "> " 0 "" {MPLTEXT 1 205 11 "combine(\");" }}}}
{SECT 0 {PARA 20 "" 0 "" {TEXT 301 7 "convert" }}{EXCHG {PARA 0 "" 0 "
" {TEXT 299 88 "This command can replace one function's name by the ot
her and hence change the operator." }}}{EXCHG {PARA 253 "> " 0 "" 
{MPLTEXT 1 205 14 "op(0,[u,v,w]);" }}}{EXCHG {PARA 254 "> " 0 "" 
{MPLTEXT 1 205 21 "convert([u,v,w],`+`);" }}}{EXCHG {PARA 255 "> " 0 "
" {MPLTEXT 1 205 8 "op(0,\");" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 53 
"It also converts expressions between different forms." }}}{EXCHG 
{PARA 256 "> " 0 "" {MPLTEXT 1 205 20 "convert(sin(x),exp);" }}}
{EXCHG {PARA 257 "> " 0 "" {MPLTEXT 1 205 26 "simplify(convert(\",trig
));" }}}{EXCHG {PARA 258 "> " 0 "" {MPLTEXT 1 205 39 "convert(series(e
xp(x),x=x0,3),polynom);" }}}{EXCHG {PARA 259 "> " 0 "" {MPLTEXT 1 205 
33 "convert(binomial(m,n),factorial);" }}}}{SECT 0 {PARA 20 "" 0 "" 
{TEXT 301 11 "map and zip" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 151 "Thi
s command provides convenient ways for working with multiple solutions
 or for applying a function to each element of a data structure or exp
ression." }}}{EXCHG {PARA 260 "> " 0 "" {MPLTEXT 1 205 41 "g([x,y,z]),
map(g,[x,y,z]),map(sin,x*y*z);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 260 3 
"map" }{TEXT 299 4 " or " }{TEXT 261 4 "map2" }{TEXT 299 39 " accepts \+
more than two arguments; see ?" }{TEXT 262 3 "map" }{TEXT 299 18 " for
 more details." }}}{EXCHG {PARA 261 "> " 0 "" {MPLTEXT 1 205 31 "map(D
iff,[x^2,ln(x),tan(x)],x);" }}}{EXCHG {PARA 262 "> " 0 "" {MPLTEXT 1 
205 9 "value(\");" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 263 4 "map2" }{TEXT
 299 23 " is closely related to " }{TEXT 264 3 "map" }{TEXT 299 2 ". "
 }{TEXT 265 3 "map" }{TEXT 299 45 " passes the elements of an expressi
on as the " }{TEXT 266 5 "first" }{TEXT 299 33 " argument to a functio
n, whereas " }{TEXT 267 4 "map2" }{TEXT 299 28 " passes the elements a
s the " }{TEXT 268 6 "second" }{TEXT 299 24 " argument to a function."
 }}}{EXCHG {PARA 263 "> " 0 "" {MPLTEXT 1 205 25 "map2((x,y)->x+y^2,u,
v+w);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 8 "Use the " }{TEXT 269 3 "
zip" }{TEXT 299 39 " command to merge two lists or vectors." }}}
{EXCHG {PARA 264 "> " 0 "" {MPLTEXT 1 205 40 "zip((x,y)->x=y,[lhs1,lhs
2],[rhs1,rhs2]);" }}}}{SECT 0 {PARA 20 "" 0 "" {TEXT 301 17 "select an
d remove" }}{EXCHG {PARA 0 "" 0 "" {TEXT 299 7 "We can " }{TEXT 270 6 
"select" }{TEXT 299 4 " or " }{TEXT 271 6 "remove" }{TEXT 299 88 " cer
tain elements from an expression according to the boolean-valued funct
ion we choose." }}}{EXCHG {PARA 265 "> " 0 "" {MPLTEXT 1 205 25 "expr1
:=sin(x)+exp(y)-z^x:" }}}{EXCHG {PARA 266 "> " 0 "" {MPLTEXT 1 205 26 
"select(s->has(s,x),expr1);" }}}{EXCHG {PARA 267 "> " 0 "" {MPLTEXT 1 
205 20 "select(has,expr1,x);" }}}{EXCHG {PARA 268 "> " 0 "" {MPLTEXT 
1 205 40 "remove(a->is(a<0),[-2.0,0.3,-0.6,12.0]);" }}}{EXCHG {PARA 
269 "> " 0 "" {MPLTEXT 1 205 43 "remove(evalb,\{x+y^2=u,x=x,y=z/x,3<=5
,4>7\});" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 11 "We can use " }{TEXT 
272 4 "type" }{TEXT 299 47 " to select or remove the type of an expres
sion." }}}{EXCHG {PARA 270 "> " 0 "" {MPLTEXT 1 205 49 "select(type,[u
+v,4.5,cos(2),sin(2.),Pi],numeric);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 4 "The " }{TEXT 273 7 "hastype" }{TEXT 299 80 " command determines
 if an expression contains a subexpression of a certain type." }}}
{EXCHG {PARA 271 "> " 0 "" {MPLTEXT 1 205 22 "expr2:=(a+b)*cos(c+d):" 
}}}{EXCHG {PARA 272 "> " 0 "" {MPLTEXT 1 205 23 "select(type,expr2,`+`
);" }}}{EXCHG {PARA 273 "> " 0 "" {MPLTEXT 1 205 26 "select(hastype,ex
pr2,`+`);" }}}}{SECT 0 {PARA 20 "" 0 "" {TEXT 301 4 "subs" }}{EXCHG 
{PARA 0 "" 0 "" {TEXT 274 4 "subs" }{TEXT 299 75 " makes syntactical s
ubstitutions, not mathematical substitutions; that is, " }{TEXT 275 5 
"Maple" }{TEXT 299 53 " does not evaluate the result of a substitution
. The " }{TEXT 276 4 "subs" }{TEXT 299 52 " command makes the substitu
tions from left to right." }}}{EXCHG {PARA 274 "> " 0 "" {MPLTEXT 1 
205 24 "expr1:=ln(x)+cos(y)*z^2:" }}}{EXCHG {PARA 275 "> " 0 "" 
{MPLTEXT 1 205 31 "subs(x=exp(z),z=sqrt(x),expr1);" }}}{EXCHG {PARA 0 
"" 0 "" {TEXT 299 91 "They can be substituted simultaneously if they a
re given as a set or list of substitutions." }}}{EXCHG {PARA 276 "> " 
0 "" {MPLTEXT 1 205 33 "subs(\{x=exp(z),z=sqrt(x)\},expr1);" }}}}}
{SECT 0 {PARA 5 "" 0 "" {TEXT 300 22 "1.2.4 Evaluation Rules" }}
{EXCHG {PARA 0 "" 0 "" {TEXT 299 61 "The substitution of assigned expr
ession for a name is called " }{TEXT 277 10 "evaluation" }{TEXT 299 
46 " and each step in this process is known as an " }{TEXT 278 16 "eva
luation level" }{TEXT 299 48 ". Global variables are normally evaluate
d fully." }}}{EXCHG {PARA 277 "> " 0 "" {MPLTEXT 1 205 5 "u:=v;" }}}
{EXCHG {PARA 278 "> " 0 "" {MPLTEXT 1 205 5 "v:=w;" }}}{EXCHG {PARA 
279 "> " 0 "" {MPLTEXT 1 205 5 "w:=2;" }}}{EXCHG {PARA 280 "> " 0 "" 
{MPLTEXT 1 205 4 "u,v;" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 116 "Right
 quotes prevent evaluation. A single evaluation simply removes the quo
tes. That is why we can clear a variable." }}}{EXCHG {PARA 281 "> " 0 
"" {MPLTEXT 1 205 15 "u:='u'; v:='v';" }}}{EXCHG {PARA 0 "" 0 "" {TEXT
 299 30 "Local variables are evaluated " }{TEXT 279 3 "one" }{TEXT 
299 74 " level in procedures. Arrays, tables, and procedures are evalu
ated to the " }{TEXT 280 9 "last name" }{TEXT 299 132 "; that is, eval
uation stops whenever evaluation to one more level would turn the name
 into either an array, a table, or a procedure." }}}{EXCHG {PARA 282 "
> " 0 "" {MPLTEXT 1 205 13 "with(linalg):" }}}{EXCHG {PARA 283 "> " 0 
"" {MPLTEXT 1 205 39 "J:=jacobian([sin(x)*y,cos(y)/x],[x,y]);" }}}
{EXCHG {PARA 284 "> " 0 "" {MPLTEXT 1 205 2 "J;" }}}{EXCHG {PARA 285 "
> " 0 "" {MPLTEXT 1 205 8 "eval(J);" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 71 "Special evaluation routines are used for special domains. For \+
example, " }{TEXT 281 5 "evalm" }{TEXT 299 38 " is used for computing \+
the inverse of " }{TEXT 282 1 "J" }{TEXT 299 1 "." }}}{EXCHG {PARA 286
 "> " 0 "" {MPLTEXT 1 205 14 "evalm(J^(-1));" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT 299 12 "The routine " }{TEXT 283 5 "evalc" }{TEXT 299 29 " is \+
used for complex numbers." }}}{EXCHG {PARA 287 "> " 0 "" {MPLTEXT 1 
205 25 "evalc(Re(1/('a'+I*'b')));" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 10 "Note that " }{TEXT 284 5 "evalc" }{TEXT 299 35 " assumes impli
citly that names are " }{TEXT 285 11 "real-valued" }{TEXT 299 28 ", wh
ile most of the rest of " }{TEXT 286 5 "Maple" }{TEXT 299 10 " does no
t." }}}{EXCHG {PARA 0 "" 0 "" {TEXT 299 12 "The command " }{TEXT 287 
5 "value" }{TEXT 299 76 " converts an inert function to its active for
m, forcing symbolic processing." }}}{EXCHG {PARA 288 "> " 0 "" 
{MPLTEXT 1 205 21 "test1:=Int(sin(x),x);" }}}{EXCHG {PARA 289 "> " 0 "
" {MPLTEXT 1 205 25 "eval(test1),value(test1);" }}}{EXCHG {PARA 0 "" 0
 "" {TEXT 299 78 "Delaying evaluation using inert forms is sometimes u
seful. Consider a call to " }{TEXT 288 3 "Int" }{TEXT 299 12 " instead
 of " }{TEXT 289 3 "int" }{TEXT 299 1 "." }}}{EXCHG {PARA 290 "> " 0 "
" {MPLTEXT 1 205 39 "form1:=Int(exp(-t^2)*arccos(t),t=0..1);" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT 299 15 "The inert form " }{TEXT 290 3 "In
t" }{TEXT 299 36 " provides a convenient interface to " }{TEXT 291 6 "
Maples" }{TEXT 299 41 "'s numerical quadrature routines. We use " }
{TEXT 292 5 "evalf" }{TEXT 299 13 " to evaluate " }{TEXT 293 5 "form1"
 }{TEXT 299 28 " and time the results using " }{TEXT 294 7 "time( )" }
{TEXT 299 61 ", which returns the time in seconds from some reference \+
time." }}}{EXCHG {PARA 291 "> " 0 "" {MPLTEXT 1 205 48 "t0:=time(): ev
alf(form1); time_taken:=time()-t0;" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
299 10 "If we use " }{TEXT 295 3 "int" }{TEXT 299 4 " in " }{TEXT 296 
5 "form1" }{TEXT 299 10 " then use " }{TEXT 297 5 "evalf" }{TEXT 299 
9 ", we have" }}}{EXCHG {PARA 292 "> " 0 "" {MPLTEXT 1 205 63 "restart
;   # to remove all possible effects of option remember." }}}{EXCHG 
{PARA 293 "> " 0 "" {MPLTEXT 1 205 74 "t0:=time(): evalf(int(exp(-t^2)
*arccos(t),t=0..1)); time_taken:=time()-t0;" }}}{EXCHG {PARA 0 "" 0 ""
 {TEXT 299 65 "A portion of time was spent on needless symbolic proces
sing here." }}}}}}
{MARK "0 0 0" 0 }{VIEWOPTS 1 1 0 75 100 1802 1 1 1 1 }{PAGENUMBERS 0 
1 2 33 1 1 }